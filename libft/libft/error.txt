FUNCTION         TESTS                RESULT
ft_isalpha       ✓✓✓✓✓✓✓              OK
ft_isdigit       ✓✓✓✓✓✓✓              OK
ft_isalnum       ✓✓✓✓✓✓✓              OK
ft_isascii       ✓✓✓✓✓✓✓✓             OK
ft_isprint       ✓✓✓✓✓✓✗              KO
ft_strlen        ✓✓✓✓✓✓               OK
ft_memset        ✓✓✓✓                 OK
ft_bzero         ✓✓                   OK
ft_memcpy        ✓✓✓                  OK
ft_memmove       ✓✓✓✓✓                OK
ft_strlcpy       ✓✓✓✓✓                OK
ft_strlcat       ✓✓✓✗✗✗✗✓✓            KO
ft_toupper       ✓✓✓✓✓✓✓              OK
ft_tolower       ✓✓✓✓✓✓✓              OK
ft_strchr        ✓✓✓✓✓✓               OK
ft_strrchr       ✓✓✓✓✓✓✓✓             OK
ft_strncmp       ✓✓✓✓✓✓✓✓✓✓✗          KO
ft_memchr        ✓✓✓✓✓✓               OK
ft_memcmp        ✓✓✓✓✓✓✓✓✓            OK
ft_strnstr       ✓✓✓✓✓✓✓✓✓✓           OK
ft_atoi          ✓✓✓✓✓✓✓✓✓✓✓✓✓✓✓✓✓✓✓  OK
ft_calloc        ✓                    OK
ft_strdup        ✓                    OK
ft_substr        ✗✗✓✗✗                KO
ft_strjoin       ✓✓✓✓                 OK
ft_strtrim       ✓✓✓✓A                KO
ft_split         ✓✓✓✓✓✓               OK
ft_itoa          ✓✓✓✓✓✓✓✓A✓           KO
ft_strmapi       ✓                    OK
ft_striteri      ✓                    OK
ft_putchar_fd    ✓✓✓✓✓✓✓              OK
ft_putstr_fd     ✓✓✓✓                 OK
ft_putendl_fd    ✓✓✓✓                 OK
ft_putnbr_fd     ✓✓✗✓✗✓✗✓✓            KO

Abort: A  Bus error: B  Segmentation fault: S  Timeout: T

More information in: /Users/hoannguy/francinette/temp/libft/war-machine/deepthought

Errors in isprint: /Users/hoannguy/francinette/temp/libft/war-machine/tests/Part1_functions/ft_isprint
Test 7:
    i = 123;
    while (i <= 127)
    {
        ft_print_result(ft_isprint(i));
        i++;
    }
Expected (cat -e test07.output):
11110
Your result (cat -e user_output_test07):
11111
Errors in strlcat: /Users/hoannguy/francinette/temp/libft/war-machine/tests/Part1_functions/ft_strlcat
Test 4:
    dest[14] = 'a';
    ft_print_result(ft_strlcat(dest, "lorem ipsum dolor sit amet", 15));
    write(1, "\n", 1);
    write(1, dest, 15);
Expected (cat -e test04.output):
32$
rrrrrrlorem ip^@
Your result (cat -e user_output_test04):
32$
rrrrrrlorem ips
Test 5:
    dest[10] = 'a';
    ft_print_result(ft_strlcat(dest, "lorem ipsum dolor sit amet", 0));
    write(1, "\n", 1);
    write(1, dest, 15);
Expected (cat -e test05.output):
26$
rrrrrr^@^@^@^@a^@^@^@^@
Your result (cat -e user_output_test05):
32$
rrrrrr^@^@^@^@a^@^@^@^@
Test 6:
    dest[10] = 'a';
    ft_print_result(ft_strlcat(dest, "lorem ipsum dolor sit amet", 1));
    write(1, "\n", 1);
    write(1, dest, 15);
Expected (cat -e test06.output):
27$
rrrrrr^@^@^@^@a^@^@^@^@
Your result (cat -e user_output_test06):
32$
rrrrrr^@^@^@^@a^@^@^@^@
Test 7:
    memset(dest, 'r', 15);
    ft_print_result(ft_strlcat(dest, "lorem ipsum dolor sit amet", 5));
    write(1, "\n", 1);
...

File too large. To see full report open: /Users/hoannguy/francinette/temp/libft/war-machine/errors.log

✔ Compiling tests: libftTester (https://github.com/Tripouille/libftTester)
ℹ Testing:
ft_isalpha      : 1.OK 2.OK 3.OK 4.OK 5.OK 6.OK 7.OK 8.OK 
ft_isdigit      : 1.OK 2.OK 3.OK 4.OK 
ft_isalnum      : 1.OK 2.OK 3.OK 4.OK 5.OK 6.OK 7.OK 8.OK 9.OK 10.OK 11.OK 12.OK 
ft_isascii      : 1.OK 2.OK 3.OK 4.OK 
ft_isprint      : 1.OK 2.OK 3.KO 4.OK 
ft_strlen       : 1.OK 2.OK 
ft_memset       : 1.OK 2.OK 
ft_bzero        : 1.OK 2.OK 3.OK 
ft_memcpy       : 1.OK 2.OK 3.OK 
ft_memmove      : 1.OK 2.OK 3.OK 4.OK 
ft_strlcpy      : 1.OK 2.OK 3.OK 4.OK 5.OK 6.OK 7.OK 8.OK 9.OK 
ft_strlcat      : 1.KO 2.OK 3.KO 4.KO 5.KO 6.KO 7.OK 8.KO 9.KO 10.OK 11.OK 12.OK 13.OK 14.KO 15.KO 16.OK 17.OK 
ft_toupper      : 1.OK 2.OK 3.OK 4.OK 
ft_tolower      : 1.OK 2.OK 3.OK 4.OK 
ft_strchr       : 1.OK 2.OK 3.OK 4.OK 5.KO 
ft_strrchr      : 1.OK 2.OK 3.OK 4.OK 5.OK 6.KO 7.OK 8.OK 
ft_strncmp      : 1.OK 2.OK 3.OK 4.OK 5.OK 6.OK 7.OK 8.OK 9.OK 10.OK 11.OK 12.OK 13.OK 14.OK 15.OK 16.OK 
ft_memchr       : 1.OK 2.OK 3.OK 4.OK 5.OK 
ft_memcmp       : 1.OK 2.OK 3.OK 4.OK 5.OK 
ft_strnstr      : 1.OK 2.OK 3.OK 4.OK 5.OK 6.OK 7.OK 8.OK 9.OK 10.OK 11.OK 12.OK 13.OK 14.OK 
ft_atoi         : 1.OK 2.OK 3.OK 4.OK 5.OK 6.OK 7.OK 8.OK 9.OK 10.OK 11.OK 12.OK 13.OK 14.OK 15.OK 16.OK 17.OK 
ft_calloc       : 1.OK 2.MOK 
ft_strdup       : 1.OK 2.MOK 3.OK 4.MOK 
ft_substr       : 1.SIGSEGV
ft_strjoin      : 1.OK 2.MOK 3.OK 4.MOK 5.OK 6.MOK 7.OK 8.MOK 
ft_strtrim      : 1.OK 2.MOK 3.OK 4.MOK 5.OK 6.MOK 7.SIGSEGV
ft_split        : 1.MOK 2.OK 3.MOK 4.OK 5.MOK 6.OK LEAKS.KO [0x7fe62dc05860 : 19] 7.OK 8.OK LEAKS.KO [0x7fe62dc05880 : 11] 9.OK LEAKS.KO [0x7fe62dc058b0 : 6] 10.OK LEAKS.KO [0x7fe62dc058a0 : 1] 11.MOK 12.OK 13.OK LEAKS.KO [0x7fe62dc058c0 : 10] 14.MOK 15.OK LEAKS.KO [0x7fe62dc05890 : 1] 16.MOK 17.OK 18.OK LEAKS.KO [0x7fe62dc058e0 : 11] 19.MOK 20.OK 21.OK LEAKS.KO [0x7fe62dc058d0 : 12] 22.MOK 23.OK 24.OK LEAKS.KO [0x7fe62dc05910 : 12] 25.MOK 26.OK 27.MOK 28.OK LEAKS.KO [0x7fe62dc05900 : 13] 29.MOK 30.OK 31.MOK 32.OK 33.MOK 34.OK 35.MOK 36.OK 37.MOK 38.OK 39.MOK 40.OK 41.MOK 42.OK LEAKS.KO [0x7fe62dc059d0 : 25] 
ft_itoa         : 1.OK 2.MOK 3.OK 4.MOK 5.OK 6.MOK 7.OK 8.MOK 9.OK 10.MOK 11.OK 12.MOK 
ft_strmapi      : 1.OK 2.MOK 3.OK 4.MOK 
ft_striteri     : 1.OK 2.OK 3.OK 
ft_putchar_fd   : 1.OK 
ft_putstr_fd    : 1.OK 
ft_putendl_fd   : 1.OK 
ft_putnbr_fd    : 1.OK 2.OK 3.OK 4.OK -5.KO 


Errors in:

For /Users/hoannguy/francinette/tests/libft/Tripouille/tests/ft_isprint_test.cpp:
KO  20:         /* 3 */ check(!ft_isprint('~' + 1)); showLeaks();

For /Users/hoannguy/francinette/tests/libft/Tripouille/tests/ft_strlcat_test.cpp:
KO  21:         /* 1 */ check(ft_strlcat(dest, src, 0) == strlen(src) && !strcmp(dest, "B")); showLeaks();
KO  25:         /* 3 */ check(ft_strlcat(dest, src, 3) == 3 + strlen(src) && !strcmp(dest, "BBBB")); showLeaks();
KO  26:         /* 4 */ check(ft_strlcat(dest, src, 6) == 13 && !strcmp(dest, "BBBBA")); showLeaks();
KO  28:         /* 5 */ check(ft_strlcat(dest, src, -1) == 14 && !strcmp(dest, "CCCCCAAAAAAAAA")); showLeaks();
KO  30:         /* 6 */ check(ft_strlcat(dest, src, 17) == 24 && !strcmp(dest, "CCCCCCCCCCCCCCCA")); showLeaks();
KO  34:         /* 8 */ check(ft_strlcat(dest, src, 5) == strlen(src) + 5 && !strcmp(dest, "1111111111")); showLeaks();
KO  36:         /* 9 */ check(ft_strlcat(dest, src, 5) == strlen(src) + 5 && !strcmp(dest, "1111111111")); showLeaks();
KO  46:         /* 14 */ check(ft_strlcat(dest, "123", 2) == 3 && !strcmp(dest, "1")); showLeaks();
KO  48:         /* 15 */ check(ft_strlcat(dest, "123", 3) == 3 && !strcmp(dest, "12")); showLeaks();

For /Users/hoannguy/francinette/tests/libft/Tripouille/tests/ft_strchr_test.cpp:
KO  22:         /* 5 */ check(ft_strchr(s, 't' + 256) == s); showLeaks();

For /Users/hoannguy/francinette/tests/libft/Tripouille/tests/ft_strrchr_test.cpp:
KO  25:         /* 6 */ check(ft_strrchr(s, 't' + 256) == s); showLeaks();

For /Users/hoannguy/francinette/tests/libft/Tripouille/tests/ft_substr_test.cpp:
SIGSEGV 19:     /* 1 */ check(!strcmp(s, "tripouille"));

For /Users/hoannguy/francinette/tests/libft/Tripouille/tests/ft_strtrim_test.cpp:
SIGSEGV 31:     /* 7 */ check(!strcmp(s, ""));

For /Users/hoannguy/francinette/tests/libft/Tripouille/tests/ft_putnbr_fd_test.cpp:
KO  54:         /* 5 ipenas */ check(!strcmp(s, "-42")); showLeaks();

✔ Compiling tests: libft-unit-test (https://github.com/alelievr/libft-unit-test)
ℹ Testing:
ft_isalpha      : [OK] 
ft_isdigit      : [OK] 
ft_isalnum      : [OK] 
ft_isascii      : [OK] 
ft_isprint      : [FAILED] 
[fail]: your isprint just doesn't work, REALLY ?!

ft_strlen       : [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] 
ft_memset       : [OK] [OK] [OK] [OK] [OK] [OK] [OK] 
ft_bzero        : [OK] [OK] [OK] [OK] 
ft_memcpy       : [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [CRASH] 
[crash]: your memcpy does not behave well with NULL as both params with size

ft_memmove      : [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [CRASH] [OK] 
[crash]: your memmove does not well with NULL as both parameters and size

ft_strlcpy      : [OK] [OK] [OK] [OK] [OK] [OK] [OK] 
ft_strlcat      : [OK] [FAILED] [FAILED] [OK] [OK] [OK] [OK] [OK] [OK] [FAILED] [OK] [OK] 
[fail]: your strlcat does not work with basic input
[fail]: your strlcat does not work with basic input
[fail]: your strlcat return value is false

ft_toupper      : [OK] 
ft_tolower      : [OK] 
ft_strchr       : [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] 
ft_strrchr      : [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] 
ft_strncmp      : [OK] [OK] [OK] [OK] [OK] [OK] [FAILED] [OK] [OK] [FAILED] [OK] [OK] [OK] [OK] 
[fail]: your strncmp does not cast in unsigned char the diff
[fail]: your strncmp does not work with non ascii chars

ft_memchr       : [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] 
ft_memcmp       : [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] 
ft_strnstr      : [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] 
ft_atoi         : [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] 
ft_calloc       : [OK] [OK] [OK] [OK] [OK] 
ft_strdup       : [OK] [OK] [OK] [OK] [OK] [OK] [OK] 
ft_substr       : [CRASH] [FAILED] [OK] [OK] [FAILED] [OK] [CRASH] [OK] [CRASH] 
[crash]: your substr does not work with valid input
[fail]: your substr does not work with valid input
[fail]: your substr does not set \0 to the end of the string
[crash]: your substr does not work for a whole string
[crash]: your substr does not work when start >= ft_strlen(s)

ft_strjoin      : [OK] [OK] [OK] [OK] [OK] 
ft_strtrim      : [OK] [OK] [OK] [CRASH] [OK] [OK] [OK] [OK] [OK] 
[crash]: your strtrim does not work with full blank input

ft_split        : [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [CRASH] [OK] 
[crash]: you did not protect your split

ft_itoa         : [OK] [OK] [OK] [OK] [OK] [CRASH] [OK] [OK] [OK] 
[crash]: you did not protect your malloc

ft_strmapi      : [OK] [OK] [OK] [OK] [OK] 
ft_striteri     : [OK] [OK] 
ft_putchar_fd   : [OK] [OK] 
ft_putstr_fd    : [OK] [OK] 
ft_putendl_fd   : [OK] [OK] 
ft_putnbr_fd    : [OK] [OK] [OK] [OK] [OK] 

[fail]: your isprint just doesn't work, REALLY ?!
 Test code:
        int i;
 
        i = -1;
        while (i < 530)
        {
                if (!!ft_isprint(i) != !!isprint(i))
                {
                        exit(TEST_FAILED);
                }
                i++;
        }
        exit(TEST_SUCCESS);
 
 Diffs:
      isprint: |0|
   ft_isprint: |16384|
 param: (127)
 
 [crash]: your memcpy does not behave well with NULL as both params with size
 Test code:
        ft_memcpy(((void *)0), ((void *)0), 3);
 
 
 [crash]: your memmove does not well with NULL as both parameters and size
 Test code:
        ft_memmove(((void *)0), ((void *)0), 5);
 
 
 [fail]: your strlcat does not work with basic input
 Test code:
        char *str = "the cake is a lie !\0I'm hidden lol\r\n";
        char buff1[0xF00] = "there is no stars in the sky";
        char buff2[0xF00] = "there is no stars in the sky";
        size_t max = strlen("the cake is a lie !\0I'm hidden lol\r\n") + 4;
        size_t r1 = __builtin___strlcat_chk (buff1, str, max, __builtin_object_size (buff1, 2 > 1 ? 1 : 0));
        size_t r2 = ft_strlcat(buff2, str, max);
 
        if (r1 != r2)
                exit(TEST_FAILED);
        char s1[4] = "";
        char s2[4] = "";
        r1 = __builtin___strlcat_chk (s1, "thx to ntoniolo for this test !", 4, __builtin_object_size (s1, 2 > 1 ? 1 : 0))
                ;
        r2 = ft_strlcat(s2, "thx to ntoniolo for this test !", 4)
                ;
        if (r1 != r2)
                exit(TEST_FAILED);
        exit(TEST_SUCCESS);
...

File too large. To see full report open: /Users/hoannguy/francinette/temp/libft/alelievr/result.log

✔ Compiling tests: fsoares (my own)
ℹ Testing:
ft_isalpha      : OK
ft_isdigit      : OK
ft_isalnum      : OK
ft_isascii      : OK
ft_isprint      : KO
ft_strlen       : OK
ft_memset       : OK
ft_bzero        : OK
ft_memcpy       : OK
ft_memmove      : OK
ft_strlcpy      : OK
ft_strlcat      : KO
ft_toupper      : OK
ft_tolower      : OK
ft_strchr       : KO
ft_strrchr      : KO
ft_strncmp      : KO
ft_memchr       : OK
ft_memcmp       : OK
ft_strnstr      : 21.KO Abort
ft_atoi         : OK
ft_calloc       : OK
ft_strdup       : OK
ft_substr       : KO
ft_strjoin      : OK
ft_strtrim      : 1.KO Abort
ft_split        : KO
ft_itoa         : 5.KO Abort
ft_strmapi      : OK
ft_striteri     : OK
ft_putchar_fd   : OK
ft_putstr_fd    : OK
ft_putendl_fd   : OK
-ft_putnbr_fd    : KO
'NoneType' object has no attribute 'group'